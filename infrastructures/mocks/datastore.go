// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructures/datastore.go

// Package mocks is a generated GoMock package.
package mocks

import (
	datastore "cloud.google.com/go/datastore"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockdataStoreClient is a mock of dataStoreClient interface
type MockdataStoreClient struct {
	ctrl     *gomock.Controller
	recorder *MockdataStoreClientMockRecorder
}

// MockdataStoreClientMockRecorder is the mock recorder for MockdataStoreClient
type MockdataStoreClientMockRecorder struct {
	mock *MockdataStoreClient
}

// NewMockdataStoreClient creates a new mock instance
func NewMockdataStoreClient(ctrl *gomock.Controller) *MockdataStoreClient {
	mock := &MockdataStoreClient{ctrl: ctrl}
	mock.recorder = &MockdataStoreClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockdataStoreClient) EXPECT() *MockdataStoreClientMockRecorder {
	return m.recorder
}

// Put mocks base method
func (m *MockdataStoreClient) Put(ctx context.Context, key *datastore.Key, src interface{}) (*datastore.Key, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", ctx, key, src)
	ret0, _ := ret[0].(*datastore.Key)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Put indicates an expected call of Put
func (mr *MockdataStoreClientMockRecorder) Put(ctx, key, src interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockdataStoreClient)(nil).Put), ctx, key, src)
}

// Get mocks base method
func (m *MockdataStoreClient) Get(ctx context.Context, key *datastore.Key, dst interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, key, dst)
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockdataStoreClientMockRecorder) Get(ctx, key, dst interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockdataStoreClient)(nil).Get), ctx, key, dst)
}
