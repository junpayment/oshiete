// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructures/esa.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	response "github.com/hiroakis/esa-go/response"
	reflect "reflect"
)

// MockesaClient is a mock of esaClient interface
type MockesaClient struct {
	ctrl     *gomock.Controller
	recorder *MockesaClientMockRecorder
}

// MockesaClientMockRecorder is the mock recorder for MockesaClient
type MockesaClientMockRecorder struct {
	mock *MockesaClient
}

// NewMockesaClient creates a new mock instance
func NewMockesaClient(ctrl *gomock.Controller) *MockesaClient {
	mock := &MockesaClient{ctrl: ctrl}
	mock.recorder = &MockesaClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockesaClient) EXPECT() *MockesaClientMockRecorder {
	return m.recorder
}

// SetQuery mocks base method
func (m *MockesaClient) SetQuery(query string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetQuery", query)
}

// SetQuery indicates an expected call of SetQuery
func (mr *MockesaClientMockRecorder) SetQuery(query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetQuery", reflect.TypeOf((*MockesaClient)(nil).SetQuery), query)
}

// SetPage mocks base method
func (m *MockesaClient) SetPage(page int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetPage", page)
}

// SetPage indicates an expected call of SetPage
func (mr *MockesaClientMockRecorder) SetPage(page interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPage", reflect.TypeOf((*MockesaClient)(nil).SetPage), page)
}

// GetPosts mocks base method
func (m *MockesaClient) GetPosts() (response.Posts, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPosts")
	ret0, _ := ret[0].(response.Posts)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPosts indicates an expected call of GetPosts
func (mr *MockesaClientMockRecorder) GetPosts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPosts", reflect.TypeOf((*MockesaClient)(nil).GetPosts))
}
