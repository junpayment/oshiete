// Code generated by MockGen. DO NOT EDIT.
// Source: services/oshiete.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/junpayment/oshiete/models"
	reflect "reflect"
)

// MockEsaClient is a mock of EsaClient interface
type MockEsaClient struct {
	ctrl     *gomock.Controller
	recorder *MockEsaClientMockRecorder
}

// MockEsaClientMockRecorder is the mock recorder for MockEsaClient
type MockEsaClientMockRecorder struct {
	mock *MockEsaClient
}

// NewMockEsaClient creates a new mock instance
func NewMockEsaClient(ctrl *gomock.Controller) *MockEsaClient {
	mock := &MockEsaClient{ctrl: ctrl}
	mock.recorder = &MockEsaClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEsaClient) EXPECT() *MockEsaClientMockRecorder {
	return m.recorder
}

// GetListByKey mocks base method
func (m *MockEsaClient) GetListByKey(key string) (*models.EsaAnswer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListByKey", key)
	ret0, _ := ret[0].(*models.EsaAnswer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListByKey indicates an expected call of GetListByKey
func (mr *MockEsaClientMockRecorder) GetListByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListByKey", reflect.TypeOf((*MockEsaClient)(nil).GetListByKey), key)
}

// MockDataStoreClient is a mock of DataStoreClient interface
type MockDataStoreClient struct {
	ctrl     *gomock.Controller
	recorder *MockDataStoreClientMockRecorder
}

// MockDataStoreClientMockRecorder is the mock recorder for MockDataStoreClient
type MockDataStoreClientMockRecorder struct {
	mock *MockDataStoreClient
}

// NewMockDataStoreClient creates a new mock instance
func NewMockDataStoreClient(ctrl *gomock.Controller) *MockDataStoreClient {
	mock := &MockDataStoreClient{ctrl: ctrl}
	mock.recorder = &MockDataStoreClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDataStoreClient) EXPECT() *MockDataStoreClientMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockDataStoreClient) Save(key, answer string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", key, answer)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockDataStoreClientMockRecorder) Save(key, answer interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockDataStoreClient)(nil).Save), key, answer)
}

// GetByKey mocks base method
func (m *MockDataStoreClient) GetByKey(key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByKey", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByKey indicates an expected call of GetByKey
func (mr *MockDataStoreClientMockRecorder) GetByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByKey", reflect.TypeOf((*MockDataStoreClient)(nil).GetByKey), key)
}
